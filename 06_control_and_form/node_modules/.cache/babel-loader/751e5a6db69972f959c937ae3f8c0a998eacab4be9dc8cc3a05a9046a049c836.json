{"ast":null,"code":"var _jsxFileName = \"/Users/syota_nishimura/Desktop/Web/React/React-Practice/06_control_and_form/src/110_multi_checkbox/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [fruits, setFruits] = useState([{\n    label: \"Apple\",\n    value: 100,\n    checked: false\n  }, {\n    label: \"Banana\",\n    value: 200,\n    checked: false\n  }, {\n    label: \"Cherry\",\n    value: 300,\n    checked: false\n  }]);\n  const [sum, setSum] = useState(0);\n  const handleChange = e => {\n    const newFruits = fruits.map(fruit => {\n      const newFruit = {\n        ...fruit\n      };\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruit.checked;\n      }\n      return newFruit;\n    });\n    setFruits(newFruits);\n    let sumVal = 0;\n    newFruits.forEach(fruit => {\n      if (fruit.checked) {\n        sumVal += fruit.value;\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [fruits.map(fruit => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              value: fruit.label,\n              checked: fruit.checked,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this), fruit.label, \":\", fruit.value]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, fruit.label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this)\n      }, void 0, false);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"\\u5408\\u8A08\\uFF1A\", sum]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Example, \"fXrQpGPIkHd+1QektaizVGqb6qE=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","fruits","setFruits","label","value","checked","sum","setSum","handleChange","e","newFruits","map","fruit","newFruit","target","sumVal","forEach","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/syota_nishimura/Desktop/Web/React/React-Practice/06_control_and_form/src/110_multi_checkbox/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst Example = () => {\n  const [fruits, setFruits] = useState([\n    { label: \"Apple\", value: 100, checked: false },\n    { label: \"Banana\", value: 200, checked: false },\n    { label: \"Cherry\", value: 300, checked: false },\n  ]);\n\n  const [sum, setSum] = useState(0);\n\n  const handleChange = (e) => {\n\n    const newFruits = fruits.map(fruit => {\n      const newFruit = {...fruit}\n      if (newFruit.label === e.target.value) {\n        newFruit.checked = !fruit.checked;\n      }\n      return newFruit;\n    })\n    setFruits(newFruits);\n\n    let sumVal = 0;\n    newFruits.forEach(fruit => {\n      if (fruit.checked) {\n        sumVal += fruit.value\n      }\n    })\n  }\n\n  return (\n    <div>\n      {\n        fruits.map(fruit => {\n          return (\n            <>\n              <div key={fruit.label}>\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    value={fruit.label}\n                    checked={fruit.checked}\n                    onChange={handleChange} />\n                  {fruit.label}:{fruit.value}\n                </label>\n              </div>\n            </>\n          )\n        })\n      }\n      <div>合計：{sum}</div>\n    </div>\n  );\n};\n\nexport default Example;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,CACnC;IAAES,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC9C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,EAC/C;IAAEF,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE,GAAG;IAAEC,OAAO,EAAE;EAAM,CAAC,CAChD,CAAC;EAEF,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAMc,YAAY,GAAIC,CAAC,IAAK;IAE1B,MAAMC,SAAS,GAAGT,MAAM,CAACU,GAAG,CAACC,KAAK,IAAI;MACpC,MAAMC,QAAQ,GAAG;QAAC,GAAGD;MAAK,CAAC;MAC3B,IAAIC,QAAQ,CAACV,KAAK,KAAKM,CAAC,CAACK,MAAM,CAACV,KAAK,EAAE;QACrCS,QAAQ,CAACR,OAAO,GAAG,CAACO,KAAK,CAACP,OAAO;MACnC;MACA,OAAOQ,QAAQ;IACjB,CAAC,CAAC;IACFX,SAAS,CAACQ,SAAS,CAAC;IAEpB,IAAIK,MAAM,GAAG,CAAC;IACdL,SAAS,CAACM,OAAO,CAACJ,KAAK,IAAI;MACzB,IAAIA,KAAK,CAACP,OAAO,EAAE;QACjBU,MAAM,IAAIH,KAAK,CAACR,KAAK;MACvB;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACER,OAAA;IAAAqB,QAAA,GAEIhB,MAAM,CAACU,GAAG,CAACC,KAAK,IAAI;MAClB,oBACEhB,OAAA,CAAAE,SAAA;QAAAmB,QAAA,eACErB,OAAA;UAAAqB,QAAA,eACErB,OAAA;YAAAqB,QAAA,gBACErB,OAAA;cACEsB,IAAI,EAAC,UAAU;cACfd,KAAK,EAAEQ,KAAK,CAACT,KAAM;cACnBE,OAAO,EAAEO,KAAK,CAACP,OAAQ;cACvBc,QAAQ,EAAEX;YAAa;cAAAY,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAG,EAC3BX,KAAK,CAACT,KAAK,EAAC,GAAC,EAACS,KAAK,CAACR,KAAK;UAAA;YAAAgB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACpB,GARAX,KAAK,CAACT,KAAK;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MASf,iBACL;IAEP,CAAC,CAAC,eAEJ3B,OAAA;MAAAqB,QAAA,GAAK,oBAAG,EAACX,GAAG;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACf;AAEV,CAAC;AAACvB,EAAA,CAnDID,OAAO;AAAAyB,EAAA,GAAPzB,OAAO;AAqDb,eAAeA,OAAO;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}